# Generated by Django 4.0.4 on 2022-05-22 02:42

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'author',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_title', models.CharField(max_length=200, unique=True)),
                ('publication_year', models.DateField(blank=True)),
                ('rating', models.FloatField(blank=True)),
                ('rental_status', models.BooleanField(blank=True)),
                ('authors', models.ManyToManyField(related_name='book_by_author', to='book_budi_catalogue.author')),
            ],
            options={
                'db_table': 'book',
            },
        ),
        migrations.CreateModel(
            name='ComicBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comic_title', models.CharField(max_length=200, unique=True)),
                ('publisher', models.CharField(max_length=100)),
                ('protagonist', models.CharField(blank=True, max_length=100)),
                ('entry_number', models.IntegerField(blank=True)),
                ('publication_year', models.DateField()),
                ('rating', models.FloatField(blank=True)),
                ('rental_status', models.BooleanField(blank=True)),
                ('authors', models.ManyToManyField(related_name='comic_by_author', to='book_budi_catalogue.author')),
            ],
            options={
                'db_table': 'comic_book',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'genre',
            },
        ),
        migrations.CreateModel(
            name='Illustrator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('illustrator_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'illustrator',
            },
        ),
        migrations.CreateModel(
            name='MediumType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'medium_type',
            },
        ),
        migrations.CreateModel(
            name='OwnershipStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('00', "Don't Own, Don't Want"), ('01', "Don't Own, Want"), ('10', "Own, Don't Want"), ('11', 'Own, Want')], max_length=2)),
                ('description', models.CharField(max_length=200, unique=True)),
            ],
            options={
                'db_table': 'ownership_status',
            },
        ),
        migrations.CreateModel(
            name='Shelf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shelf_name', models.CharField(max_length=200, unique=True)),
                ('description', models.CharField(max_length=200, unique=True)),
                ('books', models.ManyToManyField(related_name='book_by_shelf', to='book_budi_catalogue.book')),
                ('comics', models.ManyToManyField(related_name='comic_by_shelf', to='book_budi_catalogue.comicbook')),
            ],
            options={
                'db_table': 'shelf',
            },
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('journal_title', models.CharField(max_length=200, unique=True)),
                ('journal_description', models.CharField(blank=True, max_length=200, unique=True)),
                ('date_added', models.DateTimeField(default=datetime.datetime(2022, 5, 21, 21, 42, 15, 627325))),
                ('date_finished', models.DateTimeField(blank=True)),
                ('status_notes', models.CharField(blank=True, max_length=200)),
                ('journal_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='book_budi_catalogue.mediumtype')),
            ],
        ),
        migrations.CreateModel(
            name='ComicByShelf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_recorded', models.DateTimeField(auto_now_add=True)),
                ('comic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_budi_catalogue.comicbook')),
                ('shelf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_budi_catalogue.shelf')),
            ],
            options={
                'db_table': 'comic_by_shelf',
            },
        ),
        migrations.CreateModel(
            name='ComicByIllustrator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_recorded', models.DateTimeField(auto_now_add=True)),
                ('comic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_budi_catalogue.comicbook')),
                ('illustrator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_budi_catalogue.illustrator')),
            ],
            options={
                'db_table': 'comic_by_illustrator',
            },
        ),
        migrations.CreateModel(
            name='ComicByGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_recorded', models.DateTimeField(auto_now_add=True)),
                ('comic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_budi_catalogue.comicbook')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_budi_catalogue.genre')),
            ],
            options={
                'db_table': 'comic_by_genre',
            },
        ),
        migrations.CreateModel(
            name='ComicByAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_recorded', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_budi_catalogue.author')),
                ('comic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_budi_catalogue.comicbook')),
            ],
            options={
                'db_table': 'comic_by_author',
            },
        ),
        migrations.AddField(
            model_name='comicbook',
            name='comic_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='book_budi_catalogue.mediumtype'),
        ),
        migrations.AddField(
            model_name='comicbook',
            name='genres',
            field=models.ManyToManyField(related_name='comic_by_genre', to='book_budi_catalogue.genre'),
        ),
        migrations.AddField(
            model_name='comicbook',
            name='illustrators',
            field=models.ManyToManyField(related_name='comic_by_illustrator', to='book_budi_catalogue.illustrator'),
        ),
        migrations.AddField(
            model_name='comicbook',
            name='ownership_stat',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='book_budi_catalogue.ownershipstatus'),
        ),
        migrations.CreateModel(
            name='BookByShelf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_recorded', models.DateTimeField(auto_now_add=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_budi_catalogue.book')),
                ('shelf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_budi_catalogue.shelf')),
            ],
            options={
                'db_table': 'book_by_shelf',
            },
        ),
        migrations.CreateModel(
            name='BookByGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_recorded', models.DateTimeField(auto_now_add=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_budi_catalogue.book')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_budi_catalogue.genre')),
            ],
            options={
                'db_table': 'book_by_genre',
            },
        ),
        migrations.CreateModel(
            name='BookByAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_recorded', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_budi_catalogue.author')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_budi_catalogue.book')),
            ],
            options={
                'db_table': 'book_by_author',
            },
        ),
        migrations.AddField(
            model_name='book',
            name='book_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='book_budi_catalogue.mediumtype'),
        ),
        migrations.AddField(
            model_name='book',
            name='genres',
            field=models.ManyToManyField(related_name='book_by_genre', to='book_budi_catalogue.genre'),
        ),
        migrations.AddField(
            model_name='book',
            name='ownership_stat',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='book_budi_catalogue.ownershipstatus'),
        ),
    ]
